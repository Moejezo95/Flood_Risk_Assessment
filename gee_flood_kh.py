# -*- coding: utf-8 -*-
"""gee_flood_kh.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/178xcwNFu73JnaSA36NR9lB8Wncxw1J3t
"""

import streamlit as st
import geemap.foliumap as geemap
import ee

# Initialize Earth Engine
ee.Initialize()

st.title("ðŸŒŠ Khartoum Flood Dashboard")

# Load building data
buildings = ee.FeatureCollection("projects/ee-jezooo1995/assets/b147")

# Year selector
year = st.selectbox("Select Flood Year", [2017, 2018, 2019, 2020, 2021, 2022])

# Flood mask function
def get_flood_mask(year):
    start = ee.Date.fromYMD(year, 6, 1)
    end = ee.Date.fromYMD(year, 9, 30)
    s1 = ee.ImageCollection("COPERNICUS/S1_GRD") \
        .filterBounds(buildings) \
        .filter(ee.Filter.listContains('transmitterReceiverPolarisation','VH')) \
        .filter(ee.Filter.eq('orbitProperties_pass','DESCENDING')) \
        .filter(ee.Filter.eq('instrumentMode','IW')) \
        .filterMetadata('resolution_meters','equals',10) \
        .filterDate(start, end) \
        .select('VH') \
        .mean()
    srtm = ee.Image("USGS/SRTMGL1_003").toInt()
    flood = s1.lte(-21).and(srtm.lte(1700))
    return flood.updateMask(flood.eq(1))

# Get flood mask
flood_mask = get_flood_mask(year)

# Create map
m = geemap.Map(center=[15.5, 32.5], zoom=10)
m.addLayer(flood_mask, {'palette': ['blue']}, f'Flood {year}')
m.addLayer(buildings, {'color': 'red'}, 'Google Buildings')
m.to_streamlit()